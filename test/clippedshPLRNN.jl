using Test
using SCYFI
using LinearAlgebra

#randomly generate sys
M=2
H=10
A=randn(M)
W₁=randn(M,H)
#W₁ =W₁-Diagonal(W₁)
W₂=randn(H,M)
#W₂ =W₂-diagm(diag(W₂))
h₁=randn(M)
h₂=randn(H)
cycles, eigenvals =find_cycles(A, W₁,W₂, h₁,h₂,10,outer_loop_iterations=10,inner_loop_iterations=100,PLRNN=ClippedShallowPLRNN())
println(cycles)

# println(A)
# println(W₁)
# println(W₂)
# println(h₁)
# println(h₂)

function test_finding_1_cycle_M2_H10()
    # define variables for GT sys with 1 cycle if
    A=[1.4799836250879086, -1.6945099980546405]
    W₁=[0.8900829721936014 0.24766868576521212 0.2554263710950393 -0.5771080679179108 -2.129379740761085 0.031728042646673976 -0.7740703525170001 0.04768259094291391 0.6792959504153095 -1.7781119769858111; 0.6297279024943379 0.5586975133684497 -0.18842627535543358 0.7152028558426154 2.238266026927219 1.0163441695005024 0.6115773461504028 1.8513040760318145 0.5127750227966122 -2.337416929726536]
    W₂=[-0.7543485848832211 0.857424094861255; -0.12981333832339487 0.9290731862819631; 0.06164740828503748 -1.6206522735934827; 0.1856635717214527 0.23370129970278428; 1.4788242336217083 -1.4604870389877311; -0.04197765409809221 0.364736070574788; 0.04390077093273831 -0.6840588607748522; 0.34236696876785494 -0.6110477480680268; 0.11164936136447304 0.2509392315579666; 0.9314203111545968 0.18253806886914628]
  
    h₁=[0.18005923664630755, 0.42057092737475477]
    h₂=[-0.017897789466083707, 1.014731429962641, -0.3431368102401408, -2.3065949842414866, -0.7738820872835147, 0.009176181040445722, 0.6395596355828497, -0.3762485593614053, -0.12524612444111408, 0.25769322230050085]
    k = 1
    FPs,eigenvals =find_cycles(A, W₁,W₂, h₁,h₂,10,outer_loop_iterations=10,inner_loop_iterations=20,PLRNN=ClippedShallowPLRNN)
    #println(FPs[1][1])
    @test length(FPs[1][1]) == 1
end