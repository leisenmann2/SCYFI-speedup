using Test
using SCYFI
using LinearAlgebra
using Plots

#randomly generate sys

A=[1.4799836250879086, -1.6945099980546405]
W₁=[0.8900829721936014 0.24766868576521212 0.2554263710950393 -0.5771080679179108 -2.129379740761085 0.031728042646673976 -0.7740703525170001 0.04768259094291391 0.6792959504153095 -1.7781119769858111; 0.6297279024943379 0.5586975133684497 -0.18842627535543358 0.7152028558426154 2.238266026927219 1.0163441695005024 0.6115773461504028 1.8513040760318145 0.5127750227966122 -2.337416929726536]
W₂=[-0.7543485848832211 0.857424094861255; -0.12981333832339487 0.9290731862819631; 0.06164740828503748 -1.6206522735934827; 0.1856635717214527 0.23370129970278428; 1.4788242336217083 -1.4604870389877311; -0.04197765409809221 0.364736070574788; 0.04390077093273831 -0.6840588607748522; 0.34236696876785494 -0.6110477480680268; 0.11164936136447304 0.2509392315579666; 0.9314203111545968 0.18253806886914628]

h₁=[0.18005923664630755, 0.42057092737475477]
h₂=[-0.017897789466083707, 1.014731429962641, -0.3431368102401408, -2.3065949842414866, -0.7738820872835147, 0.009176181040445722, 0.6395596355828497, -0.3762485593614053, -0.12524612444111408, 0.25769322230050085]
k = 1

M=2
H=10
A=randn(M)
W₁=randn(M,H)
#W₁ =W₁-Diagonal(W₁)
W₂=randn(H,M)
#W₂ =W₂-diagm(diag(W₂))
h₁=randn(M)
h₂=randn(H)
p=plot(xlims=(-100,100),ylims=(-100,100),legend=false)
for k=1:200
    traj= get_latent_time_series(10000,A,W₁,W₂,h₁,h₂,M, z_0=randn(M), is_clipped=true)
    traj=reshape(collect(Iterators.flatten(traj)), (length(traj[1]),length(traj)))
    #println(size(traj[2][2]))
    #println(traj[1,end-10:end])
    Plots.plot!(p,traj[1,end-100:end],traj[2,end-100:end],label="k=$k",marker=:circle)
    
end
display(p)

#Plots.plot(p,traj[1,begin:20],traj[2,begin:20])
#plott the first vs the second entries in trajfor all entries
#reshape(Array(traj),10000,2)
#traj[1,:]
#reshape(collect(Iterators.flatten(a)), (length(a[1]),length(a)))
plot!(p,xlims=(11,15),ylims=(-1,1),legend=false)
cycles, eigenvals =find_cycles(A, W₁,W₂, h₁,h₂,1,outer_loop_iterations=100,inner_loop_iterations=250,PLRNN=ClippedShallowPLRNN())
println(cycles)#[1][3][1])
Plots.scatter!(p,[cycles[1][1][1][1]],[cycles[1][1][1][2]],label="cycle",marker=:cross,markersize=10,color="red")#,xlims=(-10,10),ylims=(-10,10),color=:red)

println(A)
println(W₁)
println(W₂)
println(h₁)
println(h₂)

function test_finding_1_cycle_M2_H10_clipped()
    # define variables for GT sys with 1 cycle if
    A=[0.5917591190018257, -0.2670556599714421]
    W₁=[1.068513167265907 1.1348797864408178 0.08228632519950883 -0.9427934205409179 0.642705978131473 2.6759515297389487 0.7060779536633661 0.7403096229220267 0.21090714408336952 1.7996677685472369; -1.4279184362686048 0.6651831504837336 0.05794900129098961 0.6621966950807933 -0.7228533075320732 -0.44469319962883574 -0.045486947312179594 0.9271984361948209 0.831193439154738 1.4045447403219602]
    W₂=[1.2557874562489009 -0.53340159623648; 0.18028758395331218 -0.37567264544875484; 0.5251380318002776 1.2182973412833118; 1.107554538603655 0.19665533183681763; 0.24040135957738534 0.15208824606722526; -1.4240039952629835 -1.3505046047814038; 0.051864276456367674 -0.897424734041841; -0.4695192965033343 -1.3708025903165928; 1.8783433960135856 -0.10994708797849907; -0.8724152972898058 -0.6382212185647201]
    h₁=[-0.03887946906504432, -0.5638441067359811]
    h₂=[0.583723591983208, 1.6594475075515556, 1.0987707695942321, -1.1086657549577021, 0.5102632745463866, -0.7623718435787896, 2.0653625210236695, -0.6966999800075485, 1.6483574105782965, -0.4405880221910508]
    traj= get_latent_time_series(10000,A,W₁,W₂,h₁,h₂,M, z_0=randn(M), is_clipped=true)
    traj=reshape(collect(Iterators.flatten(traj)), (length(traj[1]),length(traj)))
    traj[:,end]
    FPs,eigenvals =find_cycles(A, W₁,W₂, h₁,h₂,1,outer_loop_iterations=10,inner_loop_iterations=20,PLRNN=ClippedShallowPLRNN())
    @test round.(FPs[1][1][1],digits=3)==round.(traj[:,end],digits=3)	
    @test length(FPs[1][1]) == 1
end
test_finding_1_cycle_M2_H10_clipped()

A=[0.5917591190018257, -0.2670556599714421]
W₁=[1.068513167265907 1.1348797864408178 0.08228632519950883 -0.9427934205409179 0.642705978131473 2.6759515297389487 0.7060779536633661 0.7403096229220267 0.21090714408336952 1.7996677685472369; -1.4279184362686048 0.6651831504837336 0.05794900129098961 0.6621966950807933 -0.7228533075320732 -0.44469319962883574 -0.045486947312179594 0.9271984361948209 0.831193439154738 1.4045447403219602]
W₂=[1.2557874562489009 -0.53340159623648; 0.18028758395331218 -0.37567264544875484; 0.5251380318002776 1.2182973412833118; 1.107554538603655 0.19665533183681763; 0.24040135957738534 0.15208824606722526; -1.4240039952629835 -1.3505046047814038; 0.051864276456367674 -0.897424734041841; -0.4695192965033343 -1.3708025903165928; 1.8783433960135856 -0.10994708797849907; -0.8724152972898058 -0.6382212185647201]
h₁=[-0.03887946906504432, -0.5638441067359811]
h₂=[0.583723591983208, 1.6594475075515556, 1.0987707695942321, -1.1086657549577021, 0.5102632745463866, -0.7623718435787896, 2.0653625210236695, -0.6966999800075485, 1.6483574105782965, -0.4405880221910508]
traj= get_latent_time_series(10000,A,W₁,W₂,h₁,h₂,M, z_0=randn(M), is_clipped=true)
traj=reshape(collect(Iterators.flatten(traj)), (length(traj[1]),length(traj)))
traj[:,end]
FPs,eigenvals =find_cycles(A, W₁,W₂, h₁,h₂,1,outer_loop_iterations=10,inner_loop_iterations=20,PLRNN=ClippedShallowPLRNN())
println(FPs[1][1][1])
round.(FPs[1][1][1],digits=3)==round.(traj[:,end],digits=3)	